{"version":3,"sources":["Redux/Dialogs-reducer.js","components/Aside/Aside.module.css","components/Profile/MyPosts/Posts/Post/Post.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/ProfileInformation/ProfileStatus/StatusForm/StatusForm.module.css","components/common/Paginator/Paginator.module.css","components/Users/UsersList/User/User.module.css","components/Users/UsersList/User/UserPresent/FollowButton/FollowButton.module.css","components/Users/UsersList/UsersList.module.css","components/Login/LoginForm/LoginForm.module.css","components/Profile/ProfileInformation/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInformation/ProfileInfForm/Checkboxes/Checkboxes.module.css","utils/vallidators/validators.js","components/Aside/Friends/Friend/Friend.jsx","components/Aside/Friends/Friends.jsx","components/Aside/Pages/Pages.jsx","components/Aside/Aside.jsx","components/Header/Header.jsx","api/api.js","Redux/Auth-reducer.js","components/Header/HeaderContainer.jsx","components/common/FormsControls/FormsControls.js","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Profile/MyPosts/Posts/Post/Post.jsx","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInformation/ProfileStatus/StatusForm/StatusForm.jsx","components/Profile/ProfileInformation/ProfileStatus/ProfileStatusWithHooks.jsx","assets/images/1473.gif","components/common/Preloader/Preloader.js","components/Profile/ProfileInformation/ProfileInfForm/Checkboxes/Checkboxes.jsx","components/Profile/ProfileInformation/ProfileInfForm/ProfileInfForm.jsx","components/Profile/ProfileInformation/ProfileInformation.jsx","components/Profile/Profile.jsx","Redux/Users-reducer.js","Redux/users-reselect.js","components/common/Paginator/Paginator.jsx","components/Users/UsersList/User/UserInf/UserInf.jsx","components/Users/UsersList/User/UserPresent/FollowButton/FollowButton.jsx","components/Users/UsersList/User/UserPresent/UserPresent.jsx","components/Users/UsersList/User/User.jsx","components/Users/UsersList/UsersList.jsx","components/Users/UsersList/UsersListContainer.jsx","components/Users/Users.jsx","Redux/App-reducer.js","Redux/Profile-reducer.js","Redux/Profile-reselect.js","components/Profile/ProfileContainer.jsx","Redux/Aside-reducer.js","Redux/redux-store.js","hoc/WithSuspense.js","App.js","reportWebVitals.js","index.js","components/Profile/ProfileInformation/ProfileInfForm/ProfileInfForm.module.css","components/Users/UsersList/User/UserInf/UserInf.module.css","components/Profile/ProfileInformation/ProfileInformation.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","hoc/AuthRedirect.js","components/Aside/Friends/Friend/Friend.module.css","components/Aside/Friends/Friends.module.css","components/Aside/Pages/Pages.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/NewPost/NewPost.module.css","components/Users/UsersList/User/UserPresent/UserPresent.module.css"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","belong","addMessage","newMessageBody","type","dialogsReducer","state","action","newMessage","length","stateCopy","module","exports","maxLength","Friend","props","className","s","friend","friendImage","friendName","Friends","friends","friendsTitle","friendsList","map","Pages","items","pages","page","item","to","NavLink","activeClassName","active","compose","connect","asideReducer","aside","Header","header","loginContainer","login","isAuth","logout","onClick","LogoutUser","instance","axios","create","baseURL","withCredentials","headers","UsersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUser","delete","followUser","post","AuthAPI","email","password","rememberMe","captcha","ProfileAPI","status","put","image","inf","SET_USER_DATA","RE_AUTH_USER","SET_CAPTCHA","userId","isNeed","imageURL","setAuthUserData","authReducer","AuthMe","dispatch","a","LoginUser","remembeMe","resultCode","url","errorMessage","stopSubmit","_error","HeaderContainer","this","React","Component","auth","required","value","Element","input","meta","hasError","error","touched","textAreaContainer","textArea","errorDescription","Input","LoginReduxForm","reduxForm","form","handleSubmit","formContainer","onSubmit","inputField","Field","validate","placeholder","component","formSummaryError","remember","captchaDescription","captchaImage","src","submit","formData","Post","likesCount","Posts","posts","reverse","maxLength50","TextArea","NewPostReduxForm","newPost","newPostAddNews","MyPosts","memo","myPosts","myPosts__title","isOwner","addPost","bind","submitted","initialValues","profileReducer","enableReinitialize","statusForm","autoFocus","ProfileStatusWithHooks","useState","editMode","setEditMode","onDoubleClick","updateProfileStatus","myId","Preloader","preloader","Checkboxes","checked","LookingForAJobFormValue","change","Contact","contactTitlle","contactValue","selector","formValueSelector","fullName","profileInformation","aboutMe","lookingForAJob","lookingForAJobDescription","github","contacts","vk","facebook","instagram","twitter","website","youtube","mainLink","profileInformation__text","text","text__name","text_item","Object","entries","index","e","preventDefault","UserAvatar","photos","large","ProfileInformation","avatar_field","avatar_photo","profilePhotoIsFetching","toggleProfilePhotoIsFetching","avatar_settings","avatar_changePhoto","onChange","target","files","updateProfilePhotos","newProfileInformation","small","updateProfileInf","Profile","updateNewPost","CHANGE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","maxPagesToShowCount","totalUsersCount","isFetching","isFollowingInProgress","changeFollowStatus","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","usersReducer","user","followed","filter","createSelector","usersPage","u","getMaxPagesToShowCount","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingInProgress","Paginator","pagesToShowCount","startPageNumber","changeStartPageNumber","pagesCount","Math","ceil","totalItemsCount","maxItemsCount","min","max","i","push","addingPages","selectedPage","onPageChanged","deductingPages","UserInf","userInf","headInf","userFullName","userStatus","userLocation","userLocationCity","userLocationCountry","FollowButton","disabled","some","changeFollow","userFollowed","UserPresent","userPresent","userAvatar","User","buttons","setButton","UsersList","usersList","followStatus","apiMethod","requestUsers","totalCount","withAuthRedirect","useEffect","pageNumber","Users","usersTitle","usersBody","SET_INITIALIZE","initialized","appReducer","ADD_POST","SET_PROFILE_INFORMATION","SET_PROFILE_STATUS","DELETE_POST","SET_PROFILE_PHOTOS","TOGGLE_PROFILE_PHOTO_IS_FETCHING","setProfileStatus","setProfileInformation","newPostText","p","postId","images","getProfilePhotos","getProfilePhotoIsFetching","setProfile","FormData","append","withRouter","match","params","reducers","combineReducers","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","WithSuspense","fallback","DialogsContainer","lazy","App","initializeApp","path","render","AppContainer","promises","Promise","all","MyApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","reactDom","StrictMode","appState","document","getElementById","getState","subscribe","mapStateToRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.c8fa21d1.chunk.js","sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\"; \r\n\r\nlet initialState = {\r\n   dialogs : [\r\n         {id: 1, name :\"Grigoriy Kuznezov\"},\r\n         {id: 2, name :\"Nikolay Latkin\"},\r\n         {id: 3, name :\"Vladimir Tashinskiy\"},\r\n         {id: 4, name :\"Maksim Sokolov\"},\r\n         {id: 5, name :\"Elmira Abramova\"},\r\n         {id: 6, name :\"Artem Schiva\"},\r\n      ],\r\n\r\n   messages : [\r\n      {id: 1, message :\"Привет!\", belong: 'opponent',},\r\n      {id: 2, message :\"Я сейчас занят\", belong: 'user',},\r\n      {id: 3, message :\"Когда сможешь?\", belong: 'opponent',},\r\n      {id: 4, message :\"В следующий понедельник\", belong: 'user',},\r\n      { id: 5, message:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n         belong: 'opponent',},\r\n      {id: 6, message :\"Хорошо, пока!\", belong: 'user',},\r\n      {id: 7, message:\"Привет!\", belong: 'opponent',},\r\n      {id: 8, message :\"Я сейчас занят\", belong: 'user',},\r\n      {id: 9, message :\"Когда сможешь?\", belong: 'opponent',},\r\n      {id: 10, message :\"В следующий понедельник\", belong: 'user',},\r\n      {id: 11, message:\"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\", \r\n         belong: 'opponent',},\r\n      {id: 12, message:\"Хорошо, пока!\", belong: 'user',},\r\n   ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_MESSAGE: {\r\n         let newMessage = {\r\n            id: state.messages.length + 1,\r\n            message: action.newMessageBody,\r\n            belong: 'user',\r\n         }\r\n         \r\n         let stateCopy = {\r\n            ...state,\r\n            messages: [...state.messages, newMessage],\r\n         };\r\n         \r\n         return stateCopy;\r\n      }\r\n   \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addMessage = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__3RdYS\",\"friends\":\"Aside_friends__2JoVw\",\"friend\":\"Aside_friend__2pu35\",\"friendImage\":\"Aside_friendImage__2eF7y\",\"friendName\":\"Aside_friendName__2bn9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2lpRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__3gQ2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusForm\":\"StatusForm_statusForm__22aso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__39Hvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3DM6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFollowed\":\"FollowButton_userFollowed__lKMuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UsersList_usersList__3MPxx\",\"selectedPage\":\"UsersList_selectedPage__bQTsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1cLTW\",\"formContainer\":\"LoginForm_formContainer__3kXG2\",\"inputField\":\"LoginForm_inputField__1dhtc\",\"login\":\"LoginForm_login__30kx_\",\"password\":\"LoginForm_password__haV4O\",\"remember\":\"LoginForm_remember__O8fwi\",\"submit\":\"LoginForm_submit__3SfZ7\",\"formSummaryError\":\"LoginForm_formSummaryError__1H-Zb\",\"captcha\":\"LoginForm_captcha__3bSOt\",\"captchaDescription\":\"LoginForm_captchaDescription__Kmmpy\",\"captchaImage\":\"LoginForm_captchaImage__38BqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusForm\":\"ProfileStatus_statusForm__1qAlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInformation\":\"Checkboxes_profileInformation__34iNq\",\"avatar_field\":\"Checkboxes_avatar_field__26aqb\",\"avatar_photo\":\"Checkboxes_avatar_photo__2ECPq\",\"avatar_settings\":\"Checkboxes_avatar_settings__27vMX\",\"avatar_changePhoto\":\"Checkboxes_avatar_changePhoto__TThvX\",\"profileInformation__text\":\"Checkboxes_profileInformation__text__3p5pv\",\"text_item\":\"Checkboxes_text_item__h-G2M\",\"text__name\":\"Checkboxes_text__name__mm5SL\"};","export const required = (value) => {\r\n   if(value) return undefined;\r\n   \r\n   return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n\r\n   return (value) => {\r\n      if(value && value.length > maxLength) {\r\n         return `The maximum number of characters is ${maxLength}`\r\n      };\r\n\r\n      return undefined;\r\n   };\r\n};","import React from 'react';\r\nimport s from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n  return (\r\n    <div className={s.friend}>\r\n      <div className={s.friendImage}>\r\n        <img></img>\r\n      </div>\r\n      <div className={s.friendName}>{props.name}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport Friend from './Friend/Friend';\r\nimport s from './Friends.module.css';\r\n\r\nconst Friends = (props) => {\r\n  return (\r\n    <div className={s.friends}>\r\n      <div className={s.friendsTitle}>Friends</div>\r\n      <div className={s.friendsList}>\r\n        {\r\n          props.friends.map((friend) => <Friend name={friend.name} key={friend.id} />)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Pages.module.css';\r\n\r\nconst Pages = (props) => {\r\n  return (\r\n        <ul className={s.items}>\r\n          {\r\n            props.pages.map(page => (\r\n              <li className={s.item} key={page.id}>\r\n                <NavLink to={page.NavLink} activeClassName={s.active}>{page.name}</NavLink>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n  )\r\n}\r\n\r\nexport default Pages;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport s from './Aside.module.css';\r\nimport Friends from './Friends/Friends';\r\nimport Pages from './Pages/Pages';\r\n\r\nconst Aside = (props) => {\r\n  return (\r\n    <aside className={s.aside}>\r\n      <Pages pages={props.pages} />\r\n      <Friends friends={props.friends} />\r\n    </aside>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    pages: state.asideReducer.pages,\r\n    friends: state.asideReducer.friends,\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps, null\r\n    )\r\n)(Aside)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n      return (\r\n        <header className={s.header}>\r\n          {/* <img src=\"https://varlamov.me/2019/gryaz/01.jpg\"></img> */}\r\n          <div className={s.loginContainer}>\r\n              <div className={s.login}>\r\n                { props.isAuth ? props.login \r\n                  : <NavLink to={'/login'}>Login</NavLink> }\r\n              </div>\r\n          </div>\r\n          <div className={s.logout}>\r\n            {props.isAuth && <button onClick={props.LogoutUser}>Logout</button>}\r\n          </div>\r\n        </header>\r\n      );\r\n}\r\n\r\nexport default Header;","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n   withCredentials: true,\r\n   headers: {\r\n      \"API-KEY\": \"6937657e-e964-4c15-9936-04c475fabf96\",\r\n   },\r\n})\r\n\r\nexport const UsersAPI = {\r\n   getUsers(currentPage, pageSize) {\r\n      return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n         .then(response => {\r\n            return response.data\r\n         })\r\n   },\r\n\r\n   unfollowUser(id) {\r\n      return instance.delete(`follow/${id}`)\r\n      .then(response => response.data);\r\n   },\r\n\r\n   followUser(id) {\r\n      return instance.post(`follow/${id}`)\r\n      .then(response => response.data);\r\n   },\r\n};\r\n\r\nexport const AuthAPI = {\r\n   me() {\r\n      return instance.get('auth/me')\r\n         .then(response => response.data.data);\r\n   },\r\n\r\n   login(email, password, rememberMe, captcha) {\r\n      return instance.post('auth/login', {\r\n         email,\r\n         password,\r\n         rememberMe,\r\n         captcha\r\n      })\r\n   },\r\n\r\n   logout() {\r\n      return instance.delete('auth/login');\r\n   },\r\n\r\n   captcha() {\r\n      return instance.get('security/get-captcha-url');\r\n   },\r\n}\r\n\r\nexport const ProfileAPI = {\r\n   getProfileInformation(id) {\r\n      return instance.get(`profile/${id}`)\r\n         .then(response => response.data)\r\n   },\r\n\r\n   getProfileStatus(id) {\r\n      return instance.get(`/profile/status/${id}`)\r\n   },\r\n\r\n   updateProfileStatus(status){\r\n      return instance.put('profile/status', { status: status })\r\n   },\r\n\r\n   updateProfilePhoto(image) {\r\n      return instance.put('/profile/photo', image, {\r\n         headers: {\r\n            \"API-KEY\": \"6937657e-e964-4c15-9936-04c475fabf96\",\r\n            'Content-Type': 'multipart/form-data'\r\n         }\r\n      })\r\n   },\r\n\r\n   updateProfileInf(inf) {\r\n      return instance.put('/profile', inf)\r\n   },\r\n}\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { AuthAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst RE_AUTH_USER = \"RE_AUTH_USER\";\r\nconst SET_CAPTCHA = \"SET_CAPTCHA_NEED\"\r\n\r\nlet initialState = {\r\n   userId: null,\r\n   email: null,\r\n   login: null,\r\n   captcha: {\r\n      isNeed: false,\r\n      imageURL: null,\r\n   },\r\n   isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:{\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n            \r\n         }\r\n      }\r\n\r\n      case RE_AUTH_USER:{\r\n         return { ...state };\r\n      }\r\n\r\n      case SET_CAPTCHA: {\r\n         return { \r\n            ...state,\r\n            captcha: {\r\n               isNeed: true,\r\n               imageURL: action.imageURL,\r\n            }\r\n         }\r\n      }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, data: {userId, email, login, isAuth}});\r\nconst setCaptcha = (imageURL) => ({ type: SET_CAPTCHA, imageURL});\r\nexport default authReducer;\r\n\r\nexport const AuthMe = () => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      let data = await AuthAPI.me();\r\n\r\n      if(data.login) {\r\n         let { id, email, login} = data;\r\n         dispatch(setAuthUserData(id, email, login, true));\r\n      };\r\n   }\r\n}\r\n\r\nconst getCaptcha = () => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      let response = await AuthAPI.captcha();\r\n\r\n      dispatch(setCaptcha(response.data.url));\r\n   }\r\n}\r\n\r\nexport const LoginUser = (email, password, remembeMe, captcha) => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      let response = await AuthAPI.login(email, password, remembeMe, captcha)\r\n\r\n      if(response.data.resultCode === 0) {\r\n         dispatch(AuthMe());\r\n\r\n      } else if (response.data.resultCode === 10){\r\n         dispatch(getCaptcha());\r\n\r\n      } else {\r\n         let errorMessage = (response.data.messages > 0 ) ? response.data.messages[0] : \"Some error\";\r\n         dispatch(stopSubmit( \"login\", { _error: errorMessage }))\r\n      }\r\n   }\r\n}\r\n\r\nexport const LogoutUser = () => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      let response = await AuthAPI.logout();\r\n\r\n      if(response.data.resultCode === 0) {\r\n         dispatch(setAuthUserData(null, null, null, false));\r\n      }\r\n   }\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { LoginUser, LogoutUser } from \"../../Redux/Auth-reducer\";\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n      render() {\r\n            return ( <Header {...this.props} ></Header>)\r\n      }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n      userId: state.auth.userId,\r\n      email: state.auth.email,\r\n      login: state.auth.login,\r\n      isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n      connect(mapStateToProps, {\r\n      LoginUser,\r\n      LogoutUser,\r\n      })\r\n)(HeaderContainer);","import React from 'react';\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n   const hasError = (meta.error && meta.touched)\r\n\r\n   return (\r\n      <div className={s.textAreaContainer}>\r\n         <Element {...input} {...props}\r\n            className={s.textArea + \" \" + (hasError ? s.error : \"\")} />\r\n         <span className={s.errorDescription}>{hasError ? meta.error : \"\"}</span>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n// export const TextArea = ({input, meta, ...props}) => {\r\n//    const hasError = (meta.error && meta.touched)\r\n\r\n//    return (\r\n//       <div className={s.textAreaContainer}>\r\n//          <textarea {...input} {...props}\r\n//             className={s.textArea + \" \" + (hasError ? s.error : \"\")} />\r\n//          <span className={s.errorDescription}>{hasError ? meta.error : \"\"}</span>\r\n//       </div>\r\n//    )\r\n// }\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//    const hasError = (meta.error && meta.touched)\r\n\r\n//    return (\r\n//       <div className={s.textAreaContainer}>\r\n//          <input {...input} {...props}\r\n//             className={s.textArea + \" \" + (hasError ? s.error : \"\")} />\r\n//             {hasError && <span className={s.errorDescription}>{meta.error}</span>}\r\n//          {/* <span className={s.errorDescription}>{hasError ? meta.error : \"\"}</span> */}\r\n//       </div>\r\n//    )\r\n// }\r\n\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/vallidators/validators\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./LoginForm.module.css\";\r\n\r\nconst Input = Element(\"input\")\r\n\r\nconst LoginForm = ({handleSubmit, error, captcha}) => {\r\n   return (\r\n      <div className={s.formContainer}>\r\n         <form onSubmit={handleSubmit} className={s.form}>\r\n            <div className={s.login + \" \" + s.inputField}>\r\n               <Field\r\n                  validate={[required]}\r\n                  placeholder=\"email\"\r\n                  name={\"email\"}\r\n                  component={Input}\r\n               />\r\n            </div>\r\n            <div className={s.password + \" \" + s.inputField}>\r\n               <Field\r\n                  validate={[required]}\r\n                  placeholder=\"password\"\r\n                  name={\"password\"}\r\n                  type=\"password\"\r\n                  component={Input}\r\n               />\r\n            </div>\r\n            {error && (\r\n            <div className={s.formSummaryError}>{error}</div>\r\n            )}\r\n            <label className={s.remember}>\r\n               <Field\r\n                  type=\"checkbox\"\r\n                  name={\"rememberMe\"}\r\n                  id=\"\"\r\n                  component={\"input\"}\r\n               />\r\n               <span>Remember me</span>\r\n            </label>\r\n            {captcha.isNeed &&\r\n               <div className={s.captcha}>\r\n                  <p className={s.captchaDescription}>Пожалуйста, подтвердите, что вы не бот</p>\r\n                  <div className={s.captchaImage}>\r\n                     <img src={captcha.imageURL}></img>\r\n                  </div>\r\n                  <Field\r\n                     type=\"text\"\r\n                     name=\"captcha\"\r\n                     component=\"input\"\r\n                     className={s.inputField}\r\n                  />\r\n               </div>\r\n            }\r\n            <div className={s.submit}>\r\n               <button>Login</button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport s from \"./Login.module.css\";\r\nimport { LoginReduxForm } from \"./LoginForm/LoginForm\";\r\nimport { LoginUser } from \"../../Redux/Auth-reducer\"\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.LoginUser(formData.email, formData.password, formData.remembeMe, formData.captcha);\r\n   }\r\n\r\n      if (props.isAuth) {\r\n         return <Redirect to={\"/profile\"} />;\r\n      }\r\n\r\n   return (\r\n      <main>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm captcha={props.captcha} onSubmit={onSubmit}/>\r\n      </main>\r\n   );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n   isAuth: state.auth.isAuth,\r\n   captcha: state.auth.captcha,\r\n   };\r\n};\r\n\r\nexport default compose(\r\n   connect( mapStateToProps, {\r\n      LoginUser\r\n   }),\r\n)(Login);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={s.item}>\r\n        <img src=\"http://lamcdn.net/furfurmag.ru/post_image-image/UVXRb-V4bbqu3mypKBCfgg-article.jpg\" />\r\n        <div className=\"itemText\">{ props.message }</div>\r\n        <div>Likes: { props.likesCount }</div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.css';\r\n\r\nconst Posts = (props) => {  \r\n  return(\r\n    <div className={s.posts}>\r\n      {\r\n        props.posts\r\n          .map((post) => <Post message={post.message} likesCount={post.likesCount} key={post.id} />)\r\n          .reverse()\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../utils/vallidators/validators';\r\nimport { Element } from '../../../common/FormsControls/FormsControls';\r\nimport s from './NewPost.module.css';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst TextArea = Element(\"textarea\")\r\n\r\nconst NewPostForm = (props) => {\r\n  return (\r\n    <div className={s.newPost}>\r\n      <form onSubmit={props.handleSubmit} className={s.newPostAddNews}>\r\n        <Field\r\n          name=\"newPost\"\r\n          placeholder=\"your news...\"\r\n          validate={[required, maxLength50]}\r\n          component={TextArea}\r\n        ></Field>\r\n        <button>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const NewPostReduxForm = reduxForm({\r\n  form: \"newPost\",\r\n})(NewPostForm);","import s from './MyPosts.module.css';\r\nimport Posts from './Posts/Posts';\r\nimport { NewPostReduxForm } from './NewPost/NewPost';\r\nimport React from 'react';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let addPost = (formData) => {\r\n    props.addPost(formData.newPost);\r\n  };\r\n\r\n  return (\r\n    <section className={s.myPosts}>\r\n      <h2 className={s.myPosts__title}>{props.isOwner\r\n          ? \"My posts\"\r\n          : \"Posts\"\r\n        }\r\n      </h2>\r\n      {props.isOwner && (\r\n        <NewPostReduxForm\r\n          onSubmit={addPost.bind(this)}\r\n          submitted={props.submitted}\r\n        />\r\n      )}\r\n      <Posts isOwner={props.isOwner} posts={props.myPosts.posts} />\r\n    </section>\r\n  );\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from \"./StatusForm.module.css\";\r\n\r\nconst StatusForm = (props) => {\r\n  return (\r\n    <form\r\n      onSubmit={props.handleSubmit}\r\n      className={s.statusForm}\r\n    >\r\n      <Field\r\n        autoFocus=\"true\"\r\n        type=\"text\"\r\n        name=\"status\"\r\n        id=\"\"\r\n        component=\"input\"\r\n      />\r\n      <button type=\"submit\">UpdateStatus</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  initialValues: {\r\n    status: state.profileReducer.status \r\n  },\r\n  enableReinitialize: true,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, null),\r\n  reduxForm({form: \"status\"})\r\n)(StatusForm)","import React, { useState } from 'react';\r\nimport s from './ProfileStatus.module.css'\r\nimport StatusReduxForm from './StatusForm/StatusForm'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  \r\n  const onSubmit = (formData) => {\r\n    props.updateProfileStatus(formData.status, props.myId);\r\n\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <div onDoubleClick={() => setEditMode(true)}>\r\n      <span>\r\n        Status:\r\n        {editMode \r\n          ? <StatusReduxForm\r\n              status={props.status}\r\n              setEditMode={setEditMode}\r\n              onSubmit={onSubmit}\r\n            />\r\n          : props.status\r\n        }\r\n      </span>\r\n      {/* {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={() => setEditMode(true)}>\r\n            Status: {props.status}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <StatusReduxForm\r\n          status={props.status}\r\n          setEditMode={setEditMode}\r\n          onSubmit={onSubmit}\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","export default __webpack_public_path__ + \"static/media/1473.0f0c7a6c.gif\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/1473.gif\";\r\n\r\nlet Preloader = () => {\r\n   return ( \r\n      <div>\r\n         <img src={preloader} />\r\n      </div>   \r\n   )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from \"./Checkboxes.module.css\";\r\n\r\nconst Checkboxes = (props) => {\r\n  return (\r\n    <fieldset>\r\n      <label>\r\n        <span>Yes</span>\r\n        <input\r\n          name=\"loogingForaJoB\"\r\n          value=\"Yes\"\r\n          type=\"radio\"\r\n          checked={props.LookingForAJobFormValue}\r\n          onClick={() => props.change(\"lookingForAJob\", true )}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>No</span>\r\n        <input\r\n          name=\"loogingForaJoB\"\r\n          value=\"No\"\r\n          type=\"radio\"\r\n          checked={!props.LookingForAJobFormValue}\r\n          onClick={() => props.change(\"lookingForAJob\", false )}\r\n        />\r\n      </label>\r\n    </fieldset>\r\n  );\r\n}\r\n\r\nexport default Checkboxes;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Field, formValueSelector, reduxForm } from 'redux-form';\r\nimport Checkboxes from './Checkboxes/Checkboxes';\r\nimport s from \"./ProfileInfForm.module.css\";\r\n\r\n\r\nconst ProfileInfForm = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={props.handleSubmit}\r\n      className={`${s.profileInformation__text} ${s.text}`}\r\n    >\r\n      <div className={s.text__name + \" \" + s.text_item}>\r\n        {\r\n          props.profileInformation.fullName\r\n            ? props.profileInformation.fullName\r\n            : \"Noname\"\r\n        }\r\n        {editMode && <Field name=\"fullName\" component=\"input\" />}\r\n      </div>\r\n      <div className={s.text_item}>\r\n        About me: \r\n        {\r\n          editMode\r\n            ? <Field name=\"aboutMe\" component=\"input\" />\r\n            : props.profileInformation.aboutMe\r\n        }\r\n      </div>\r\n      <div className={s.text_item}>\r\n        Looking for a job:\r\n        {\r\n          editMode \r\n            ? (<Field \r\n                name=\"lookingForAJob\" \r\n                change={props.change} \r\n                component={Checkboxes} \r\n                LookingForAJobFormValue={props.LookingForAJobFormValue}\r\n              />)\r\n            : (props.profileInformation.lookingForAJob ? \"Yes\" : \"No\")\r\n        }\r\n      </div>\r\n      <div className={s.text_item}>\r\n        Professional skills:\r\n        { editMode \r\n            ? <Field name=\"lookingForAJobDescription\" component=\"input\" />\r\n            : props.profileInformation.lookingForAJobDescription\r\n        }\r\n      </div>\r\n      <div>\r\n        Contacts:\r\n        {\r\n          Object.entries(props.profileInformation.contacts).map(\r\n            (item, index) => (\r\n              <Contact\r\n                contactTitlle={item[0]}\r\n                contactValue={item[1]}\r\n                editMode={editMode}\r\n                key={index}\r\n              />\r\n            )\r\n          )\r\n        }\r\n      </div>\r\n      {\r\n        editMode \r\n        ? <button onClick={() => setEditMode(false)} type=\"submit\">Update information</button>\r\n        : <button onClick={(e) => {e.preventDefault(); setEditMode(true)}}>\r\n          Change information\r\n          </button>\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div>\r\n      {props.contactTitlle}: \r\n      {\r\n        props.editMode \r\n          ? <Field name={props.contactTitlle} component=\"input\"/> \r\n          : props.contactValue\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst selector = formValueSelector(\"profileInformation\")\r\n\r\nconst mapStateToProps = (state) => {\r\n  const LookingForAJobFormValue = selector(state, 'lookingForAJob')\r\n\r\n  return {\r\n    LookingForAJobFormValue,\r\n    initialValues: {\r\n      fullName: state.profileReducer.profileInformation.fullName,\r\n      aboutMe: state.profileReducer.profileInformation.aboutMe,\r\n      lookingForAJob: state.profileReducer.profileInformation.lookingForAJob,\r\n      lookingForAJobDescription: state.profileReducer.profileInformation.lookingForAJobDescription,\r\n      github: state.profileReducer.profileInformation.contacts.github,\r\n      vk: state.profileReducer.profileInformation.contacts.vk,\r\n      facebook: state.profileReducer.profileInformation.contacts.facebook,\r\n      instagram: state.profileReducer.profileInformation.contacts.instagram,\r\n      twitter: state.profileReducer.profileInformation.contacts.twitter,\r\n      website: state.profileReducer.profileInformation.contacts.website,\r\n      youtube: state.profileReducer.profileInformation.contacts.youtube,\r\n      mainLink: state.profileReducer.profileInformation.contacts.mainLink,\r\n    },\r\n    enableReinitialize: true,\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, null),\r\n  reduxForm({form: \"profileInformation\"})\r\n)(ProfileInfForm);\r\n\r\n// export const ProfileInfReduxForm = reduxForm({\r\n//   form: \"profileInf\",\r\n// })(ProfileInfForm);","import React from 'react';\r\nimport s from './ProfileInformation.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileInfReduxForm from './ProfileInfForm/ProfileInfForm';\r\n\r\nconst ProfileInformation = (props) => {\r\n  const onAvatarChange = (e) => {\r\n    if (e.target.files.length) {\r\n      let image = e.target.files[0];\r\n      props.updateProfilePhotos(image);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    let newProfileInformation = {\r\n      userId: props.myId,\r\n      aboutMe: formData.aboutMe,\r\n      photos: {\r\n        large: props.profileInformation.photos.large,\r\n        small: props.profileInformation.photos.small,\r\n      },\r\n      lookingForAJob: formData.lookingForAJob,\r\n      lookingForAJobDescription: formData.lookingForAJobDescription,\r\n      fullName: formData.fullName,\r\n      contacts: {\r\n        github: formData.github,\r\n        vk: formData.vk,\r\n        facebook: formData.facebook,\r\n        instagram: formData.instagram,\r\n        twitter: formData.twitter,\r\n        website: formData.website,\r\n        youtube: formData.youtube,\r\n        mainLink: formData.mainLink,\r\n      },\r\n    };\r\n\r\n    props.updateProfileInf(newProfileInformation);\r\n  }\r\n\r\n  return (\r\n    <section className={s.profileInformation}>\r\n      <div className={s.avatar_field}>\r\n        <div className={s.avatar_photo}>\r\n          {props.profilePhotoIsFetching ? (\r\n            <Preloader />\r\n          ) : (\r\n            <UserAvatar\r\n              photos={props.profileInformation.photos}\r\n              toggleProfilePhotoIsFetching={props.toggleProfilePhotoIsFetching}\r\n            />\r\n          )}\r\n        </div>\r\n        {props.isOwner && (\r\n          <div className={s.avatar_settings}>\r\n            <form className={s.avatar_changePhoto}>\r\n              <input type=\"file\" onChange={onAvatarChange}></input>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ProfileInfReduxForm\r\n        onSubmit={onSubmit}\r\n        profileInformation={props.profileInformation}\r\n      />\r\n      <ProfileStatusWithHooks\r\n        myId={props.myId}\r\n        status={props.status}\r\n        updateProfileStatus={props.updateProfileStatus}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <p>{props.contactTitlle}: {props.contactValue}</p>\r\n  )\r\n}\r\n\r\nconst UserAvatar = (props) => {\r\n//!!!! photo.large - ссылка, она true, когда картинка еще не загрузилась. Видимо,\r\n//!!!! нужно в src делать проверку????\r\n  return (\r\n    <img\r\n      src={\r\n        props.photos.large\r\n          ? props.photos.large\r\n          : \"https://www.film.ru/sites/default/files/filefield_paths/maxresdefault_1_24.jpg\"\r\n      }\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default ProfileInformation;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInformation from './ProfileInformation/ProfileInformation';\r\n\r\nconst Profile = (props) => {\r\n  \r\n  if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n      <div>\r\n        {/* <ProfileHeader /> */}\r\n        <ProfileInformation\r\n          myId={props.myId}\r\n          status={props.status}\r\n          profileInformation={props.profileInformation}\r\n          updateProfileStatus={props.updateProfileStatus}\r\n          updateProfilePhotos={props.updateProfilePhotos}\r\n          updateProfileInf={props.updateProfileInf}\r\n          profilePhotoIsFetching={props.profilePhotoIsFetching}\r\n          toggleProfilePhotoIsFetching={props.toggleProfilePhotoIsFetching}\r\n          isOwner={props.isOwner}\r\n        />\r\n        <MyPosts\r\n          addPost={props.addPost}\r\n          updateNewPost={props.updateNewPost}\r\n          myPosts={props.myPosts}\r\n          isOwner={props.isOwner}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport {\r\n  Profile,\r\n}","import { UsersAPI } from \"../api/api\";\r\n\r\nconst CHANGE_FOLLOW = \"CHANGE_FOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = \"TOGGLE_FOLLOWING_IN_PROGRESS\";\r\n\r\nlet initialState = {\r\n   users: [/*\r\n      { id: 1, followed: true, userInf: {fullName: \"Grigoriy Kuznezov\", status: \"Ебу коменду за матрас\", location: {city: \"Междуреченск\", country: \"Russia\"}} },\r\n      { id: 2, followed: true, userInf: {fullName: \"Nikolay Latkin\", status: \"Скучно на трех работах, развлекаюсь как могу\", location: {city: \"Краснодырск\", country: \"Russia\"}} },\r\n      { id: 3, followed: false, userInf: {fullName: \"Vladimir Tashinskiy\", status: \"Все как и на первом курсе\", location: {city: \"Воронежегрязинск\", country: \"Russia\"}} },\r\n      { id: 4, followed: true, userInf: {fullName: \"Maksim Sokolov\", status: \"Пивко смешаю с водкой: ерж пиздец колючий\", location: {city: \"Краснодырск\", country: \"Russia\"}} },\r\n      { id: 5, followed: true, userInf: {fullName: \"Elmira Abramova\", status: \"Резницы слиплись от холода. Переберусь- ка еще посевернее\", location: {city: \"Petrozavods State University\", country: \"Russia\"}} },\r\n      { id: 6, followed: false, userInf: {fullName: \"Artem Schiva\", status: \"Опять приходил Артем, нажрался как сука\", location: {city: \"Краснодырск\", country: \"Russia\"}} },\r\n      { id: 7, followed: false, userInf: {fullName: \"Grigoriy Kuznezov\", status: \"Ебу коменду за матрас\", location: {city: \"Междуреченск\", country: \"Russia\"}} },\r\n   */],\r\n   maxPagesToShowCount: 10,\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: false,\r\n   isFollowingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case CHANGE_FOLLOW:{\r\n         return {\r\n            ...state, \r\n            users: state.users.map( user => {\r\n               if(user.id === action.userId) {\r\n                  return {...user, followed: !user.followed}\r\n               }\r\n               return user;\r\n            })\r\n         }\r\n      }\r\n\r\n      case SET_USERS:{\r\n         return {\r\n            ...state, users: [...action.users] }\r\n      }\r\n\r\n      case SET_CURRENT_PAGE:{\r\n         return {\r\n            ...state, currentPage: action.currentPage, }\r\n      }\r\n\r\n      case SET_TOTAL_USERS_COUNT:{\r\n         return {\r\n            ...state, totalUsersCount: action.totalUsersCount,  }\r\n      }\r\n\r\n      case TOGGLE_IS_FETCHING:{\r\n         return {\r\n            ...state, isFetching: !state.isFetching, }\r\n      }\r\n\r\n      case TOGGLE_FOLLOWING_IN_PROGRESS:{\r\n         return {\r\n            ...state,\r\n            isFollowingInProgress: action.isFetching ? \r\n               [...state.isFollowingInProgress, action.userId] :\r\n               state.isFollowingInProgress.filter(id => id !== action.userId),\r\n         }\r\n      }\r\n   \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const changeFollowStatus = (id) => ({ type: CHANGE_FOLLOW , userId: id });\r\nexport const setUsers = (users) => ({ type: SET_USERS , users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = () => ({ type: TOGGLE_IS_FETCHING });\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      dispatch(toggleIsFetching());\r\n\r\n      let data = await UsersAPI.getUsers(currentPage, pageSize);\r\n\r\n      dispatch(toggleIsFetching());\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n      dispatch(setCurrentPage(currentPage));\r\n   }\r\n}\r\n\r\nexport const changeFollow = (id, followStatus) => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      dispatch(toggleFollowingInProgress(true, id));\r\n      \r\n      let apiMethod = followStatus \r\n         ? UsersAPI.unfollowUser.bind(this) \r\n         : UsersAPI.followUser.bind(this)\r\n\r\n      let data = await apiMethod(id);\r\n\r\n      if (!data.resultCode) {\r\n         dispatch(changeFollowStatus(id));\r\n         dispatch(toggleFollowingInProgress(false, id));\r\n      }\r\n   }\r\n}\r\n\r\nexport default usersReducer;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n   return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return users.filter(u => true);\r\n});\r\n\r\nexport const getMaxPagesToShowCount = (state) => {\r\n   return state.usersPage.maxPagesToShowCount\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n   return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n   return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n   return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n   return state.usersPage.isFetching\r\n};\r\n\r\nexport const getIsFollowingInProgress = (state) => {\r\n   return state.usersPage.isFollowingInProgress\r\n};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n\r\nlet Paginator = (props) => {\r\n   const [startPageNumber, changeStartPageNumber] = useState(1)\r\n\r\n   let pagesCount = Math.ceil(props.totalItemsCount / props.maxItemsCount);\r\n   let pagesToShowCount;\r\n\r\n   if(pagesCount) {     //!Чтобы не показывало 1 страницу в момент запроса на сервер\r\n      pagesToShowCount = Math.min(\r\n         props.maxPagesToShowCount,\r\n         Math.max(pagesCount - startPageNumber + 1, 1)\r\n      );\r\n   }\r\n\r\n   let pages = [];\r\n   for (let i = startPageNumber; i < startPageNumber + pagesToShowCount; i++) {\r\n      pages.push(i);\r\n   }\r\n\r\n   const showPrevPages = (addingPages) => {\r\n      changeStartPageNumber(Math.max(startPageNumber - addingPages, 1));\r\n   };\r\n\r\n   const showNextPages = (deductingPages) => {\r\n      changeStartPageNumber(Math.min(startPageNumber + deductingPages, pagesCount));\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {\r\n            startPageNumber > props.maxPagesToShowCount &&\r\n                  <button onClick={() => showPrevPages(props.maxPagesToShowCount)}>Prev</button>\r\n         }\r\n         {pages.map((page) => {\r\n            return (\r\n               <span\r\n                  className={page === props.currentPage ? s.selectedPage : \"\"}\r\n                  onClick={() => {\r\n                     props.onPageChanged(page);\r\n                  }}\r\n                  key={page - 1}\r\n               >\r\n                  {page}\r\n               </span>\r\n            );\r\n         })}\r\n         {\r\n            pagesCount >= startPageNumber + props.maxPagesToShowCount &&\r\n               <button onClick={() => showNextPages(props.maxPagesToShowCount)}>Next</button>\r\n         }\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./UserInf.module.css\";\r\n\r\nconst UserInf = (props) => {\r\n  return (\r\n    <section className={s.userInf}>\r\n      <div className={s.headInf}>\r\n        <p className={s.userFullName}>{props.user.name}</p>\r\n        <p className={s.userStatus}>{props.user.status}</p>\r\n      </div>\r\n      <div className={s.userLocation}>\r\n        <p className={s.userLocationCity}>{\"props.userInf.location.city\"}</p>\r\n        <p className={s.userLocationCountry}>\r\n          {\"props.userInf.location.country\"}\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserInf;\r\n","import React from \"react\";\r\nimport s from \"./FollowButton.module.css\";\r\n\r\nconst FollowButton = (props) => {\r\n\r\n  let changeFollow = () => {\r\n  props.changeFollow(props.id, props.followed);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      disabled={props.isFollowingInProgress.some(id => id === props.id)}\r\n      onClick={changeFollow}\r\n      className={s.userFollowed}\r\n    >\r\n      {props.followed ? \"folllow\" : \"unfollow\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UsersAPI } from \"../../../../../api/api\";\r\nimport FollowButton from \"./FollowButton/FollowButton\";\r\nimport s from \"./UserPresent.module.css\";\r\n\r\nconst UserPresent = (props) => {\r\n  return (\r\n    <section className={s.userPresent}>\r\n      <NavLink to={\"/profile/\" + props.id}>\r\n        <div className={s.userAvatar}>\r\n          <img></img>\r\n        </div>\r\n      </NavLink>\r\n      <FollowButton\r\n        id={props.id}\r\n        followed={props.followed}\r\n        changeFollow={props.changeFollow}\r\n        isFollowingInProgress={props.isFollowingInProgress}\r\n        toggleFollowingInProgress={props.toggleFollowingInProgress}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserPresent;\r\n","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport UserInf from \"./UserInf/UserInf\";\r\nimport UserPresent from \"./UserPresent/UserPresent\";\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <div className={s.user}>\r\n      <UserPresent\r\n        buttons={props.buttons}\r\n        setButton={props.setButton}\r\n        id={props.user.id}\r\n        followed={props.user.followed}\r\n        changeFollow={props.changeFollow}\r\n        isFollowingInProgress={props.isFollowingInProgress}\r\n        toggleFollowingInProgress={props.toggleFollowingInProgress}\r\n      />\r\n      <UserInf user={props.user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../../common/Paginator/Paginator'\r\nimport User from './User/User';\r\nimport s from \"./UsersList.module.css\";\r\n\r\nlet UsersList = (props) => {\r\n   return (\r\n      <div className={s.usersList}>\r\n         <Paginator\r\n            totalItemsCount={props.totalUsersCount}\r\n            maxPagesToShowCount={props.maxPagesToShowCount}\r\n            maxItemsCount={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            onPageChanged={props.onPageChanged}\r\n         />\r\n         {\r\n            props.users.map((user) => (\r\n               <User\r\n                  isFollowingInProgress={props.isFollowingInProgress}\r\n                  toggleFollowingInProgress={props.toggleFollowingInProgress}\r\n                  changeFollow={props.changeFollow}\r\n                  user={user}\r\n                  key={user.id}\r\n               />\r\n            ))\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UsersList;","import { connect } from \"react-redux\";\r\nimport {\r\n  changeFollow,\r\n  requestUsers,\r\n  setCurrentPage,\r\n} from \"../../../Redux/Users-reducer\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../../hoc/AuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getIsFollowingInProgress,\r\n  getPageSize,\r\n  getMaxPagesToShowCount,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../../Redux/users-reselect\";\r\nimport { useEffect } from \"react\";\r\nimport UsersList from \"./UsersList\";\r\n\r\nconst UsersListContainer = (props) => {\r\n  let currentPage = props.currentPage;\r\n  let pageSize = props.pageSize;\r\n\r\n  useEffect(() => {\r\n    props.requestUsers(currentPage, pageSize);\r\n\r\n    // return (\r\n    //   props.setCurrentPage(1)\r\n    // )\r\n  }, [currentPage, pageSize]);\r\n\r\n  const onPageChanged = (pageNumber) => {\r\n    props.requestUsers(pageNumber, props.pageSize);\r\n  };\r\n  return (\r\n    <>\r\n      {props.isFetching ? <Preloader /> : null}\r\n      <UsersList\r\n        totalUsersCount={props.totalUsersCount}\r\n        maxPagesToShowCount={props.maxPagesToShowCount}\r\n        pageSize={props.pageSize}\r\n        currentPage={props.currentPage}\r\n        onPageChanged={onPageChanged}\r\n        users={props.users}\r\n        changeFollow={props.changeFollow}\r\n        isFollowingInProgress={props.isFollowingInProgress}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    maxPagesToShowCount: getMaxPagesToShowCount(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    isFollowingInProgress: getIsFollowingInProgress(state),\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, \r\n    { changeFollow, \r\n      requestUsers, \r\n      setCurrentPage }),\r\n  withAuthRedirect\r\n)(UsersListContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport UsersListContainer from \"./UsersList/UsersListContainer\"\r\n\r\nconst Users = (props) => {\r\n   return (\r\n      <section className={s.users}>\r\n         <div className={s.usersTitle}>Users</div>\r\n         <div className={s.usersBody}>\r\n            <UsersListContainer/>\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default Users;\r\n","import { AuthMe } from \"./Auth-reducer\";\r\n\r\nconst SET_INITIALIZE = \"SET_INITIALIZE\";\r\n\r\nlet initialState = {\r\n   initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_INITIALIZE:{\r\n         return {\r\n            ...state,\r\n            initialized: true,\r\n         }\r\n      }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: SET_INITIALIZE });\r\nexport default appReducer;\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promises = [];\r\n   promises.push(dispatch(AuthMe()));\r\n\r\n   Promise.all(promises)\r\n      .then(() => {\r\n         dispatch(initializedSuccess());\r\n      });\r\n};","import { ProfileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_PROFILE_INFORMATION = \"SET_PROFILE_INFORMATION\";\r\nconst SET_PROFILE_STATUS = \"SET_PROFILE_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SET_PROFILE_PHOTOS = \"SET_PROFILE_PHOTOS\";\r\nconst TOGGLE_PROFILE_PHOTO_IS_FETCHING = \"TOGGLE_PROFILE_PHOTO_IS_FETCHING\";\r\n\r\nlet initialState = {\r\n   profileInformation: {\r\n      photos: {\r\n         large: null,\r\n         small: null,\r\n         isFetching: false,\r\n      },\r\n      fullName: \" \",\r\n      aboutMe: null,\r\n      lookingForAJob: null,\r\n      lookingForAJobDescription: null,\r\n      contacts: {\r\n         github: null,\r\n         vk: null,\r\n         facebook: null,\r\n         instagram: null,\r\n         twitter: null,\r\n         website: null,\r\n         youtube: null,\r\n         mainLink: null,\r\n      },\r\n      id: null,\r\n   },\r\n\r\n   status: \"\",\r\n\r\n   myPosts : {\r\n      posts : [\r\n         {id: 0, message: 'Hi! How are you?', likesCount: 1},\r\n         {id: 1, message: 'Hi! What`s up?', likesCount: 4},\r\n         {id: 2, message: 'Hi, man!', likesCount: 3},\r\n         {id: 3, message: 'Would you lika a coup of cofeee?', likesCount: 2},\r\n      ],\r\n   },\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:{\r\n         let newPost = {\r\n            id: state.myPosts.posts.length,\r\n            message: action.newPostText,\r\n            likesCount: 0,\r\n         }\r\n\r\n         return {\r\n            ...state,\r\n            myPosts: {\r\n               ...state.myPosts,\r\n               posts: [\r\n                  ...state.myPosts.posts,\r\n                  newPost,\r\n               ]\r\n            }\r\n         }\r\n      }\r\n      \r\n      case DELETE_POST:{\r\n         return {\r\n            ...state,\r\n            myPosts: {\r\n               ...state.myPosts,\r\n               posts: state.myPosts.posts.filter(p => p.id !== action.postId)\r\n            }\r\n         }\r\n      }\r\n      \r\n      case SET_PROFILE_INFORMATION:{\r\n         return {\r\n            ...state,\r\n            profileInformation: {\r\n               ...state.profileInformation,\r\n               photos: {\r\n                  ...state.profileInformation.photos,\r\n                  large: action.profileInformation.photos.large,\r\n                  small: action.profileInformation.photos.small,\r\n               },\r\n               aboutMe: action.profileInformation.aboutMe,\r\n               lookingForAJob: action.profileInformation.lookingForAJob,\r\n               lookingForAJobDescription: action.profileInformation.lookingForAJobDescription,\r\n               fullName: action.profileInformation.fullName,\r\n               contacts: {\r\n                  github: action.profileInformation.contacts.github,\r\n                  vk: action.profileInformation.contacts.vk,\r\n                  facebook: action.profileInformation.contacts.facebook,\r\n                  instagram: action.profileInformation.contacts.instagram,\r\n                  twitter: action.profileInformation.contacts.twitter,\r\n                  website: action.profileInformation.contacts.website,\r\n                  youtube: action.profileInformation.contacts.youtube,\r\n                  mainLink: action.profileInformation.contacts.mainLink,\r\n               },\r\n               id: action.profileInformation.userId,\r\n            }\r\n         }\r\n      }\r\n\r\n      case SET_PROFILE_STATUS:{\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         }\r\n      }\r\n\r\n      case SET_PROFILE_PHOTOS:{\r\n         return {\r\n            ...state,\r\n            profileInformation: {\r\n               ...state.profileInformation,\r\n               photos: {\r\n                  ...state.profileInformation.photos,\r\n                  large: action.images.large,\r\n                  small: action.images.small\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      case TOGGLE_PROFILE_PHOTO_IS_FETCHING:{\r\n         return {\r\n            ...state,\r\n            profileInformation: {\r\n               ...state.profileInformation,\r\n               photos: {\r\n                  ...state.profileInformation.photos,\r\n                  isFetching: !state.profileInformation.photos.isFetching\r\n               }\r\n            }\r\n         }\r\n      }\r\n   \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setProfileStatus = (status) => ({ type: SET_PROFILE_STATUS, status });\r\nexport const setProfileInformation = (profileInformation) => ({type: SET_PROFILE_INFORMATION, profileInformation});\r\nexport const toggleProfilePhotoIsFetching = () => ({type: TOGGLE_PROFILE_PHOTO_IS_FETCHING})\r\nexport const setProfilePhotos = (images) => ({type:SET_PROFILE_PHOTOS, images})\r\nexport default profileReducer;\r\n\r\nexport const setProfile = (userId) => {\r\n   \r\n   return async (dispatch) => {\r\n      dispatch(toggleProfilePhotoIsFetching());\r\n\r\n      let data = await ProfileAPI.getProfileInformation(userId);\r\n      dispatch(setProfileInformation(data));\r\n\r\n      let response = await ProfileAPI.getProfileStatus(userId);\r\n      dispatch(setProfileStatus(response.data));\r\n      dispatch(toggleProfilePhotoIsFetching());\r\n   }\r\n};\r\n\r\nexport const updateProfileStatus = (status) => {\r\n   \r\n   return async (dispatch) => {\r\n      let response = await ProfileAPI.updateProfileStatus(status);\r\n\r\n      if(response.data.resultCode === 0 ){\r\n         dispatch(setProfileStatus(status));\r\n      }\r\n   }\r\n};\r\n\r\nexport const updateProfilePhotos = (image) => {\r\n   let formData = new FormData();\r\n   formData.append(\"image\", image)\r\n\r\n   return async (dispatch) => {\r\n      dispatch(toggleProfilePhotoIsFetching());\r\n\r\n      let response = await ProfileAPI.updateProfilePhoto(formData);\r\n\r\n      if(response.data.resultCode === 0) {\r\n         dispatch(setProfilePhotos(response.data.data.photos));\r\n      }\r\n\r\n      dispatch(toggleProfilePhotoIsFetching());\r\n   }\r\n}\r\n\r\nexport const updateProfileInf = (profileInformation) => {\r\n\r\n   return async (dispatch) => {\r\n\r\n      let response = await ProfileAPI.updateProfileInf(profileInformation);\r\n\r\n      if(response.data.resultCode === 0) {\r\n         dispatch(setProfileInformation(profileInformation));\r\n      }\r\n   }\r\n}","export const getProfilePhotos = (state) => {\r\n   return state.profileReducer.profileInformation.photos\r\n};\r\n\r\nexport const getProfilePhotoIsFetching = (state) => {\r\n   return state.profileReducer.profileInformation.photos.isFetching\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Profile } from './Profile';\r\nimport {\r\n  addPost,\r\n  setProfile,\r\n  updateProfileStatus,\r\n  updateProfilePhotos,\r\n  toggleProfilePhotoIsFetching,\r\n  updateProfileInf,\r\n} from \"../../Redux/Profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfilePhotoIsFetching, getProfilePhotos } from \"../../Redux/Profile-reselect\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n  // componentDidMount() {\r\n  //   let userId = this.props.match.params.userId; ////!Из данных, передаваемых с WithRouter\r\n  //   if(userId) {\r\n  //     this.props.setProfile(userId);\r\n  //   } else {\r\n  //     this.props.setProfile(this.props.myId);\r\n  //   }\r\n  // }\r\n  let userId = props.match.params.userId; ////!Из данных, передаваемых с WithRouter\\\r\n  let myId = props.myId;\r\n\r\n  useEffect(() => {\r\n    userId ? props.setProfile(userId) : props.setProfile(myId);\r\n  }, [userId, myId]);\r\n\r\n  return <Profile {...props} isOwner={!userId} />;\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profileInformation: state.profileReducer.profileInformation,\r\n    myPosts: state.profileReducer.myPosts,\r\n    status: state.profileReducer.status,\r\n    photos: getProfilePhotos(state),\r\n    profilePhotoIsFetching: getProfilePhotoIsFetching(state),\r\n    myId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setProfile,\r\n    addPost,\r\n    updateProfileStatus,\r\n    updateProfilePhotos,\r\n    toggleProfilePhotoIsFetching,\r\n    updateProfileInf,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);","let initialState = {\r\n   pages : [\r\n      {id: 0, name: \"Profile\", NavLink: \"/profile\"},\r\n      {id: 1, name: \"Messages\", NavLink: \"/dialogs\"},\r\n      {id: 2, name: \"News\", NavLink: \"/news\"},\r\n      {id: 3, name: \"Music\", NavLink: \"/music\"},\r\n      {id: 4, name: \"Setting\", NavLink: \"/settings\"},\r\n      {id: 5, name: \"Find Users\", NavLink: \"/users\"},\r\n   ],\r\n   friends: [\r\n      { id: 1, name: \"Grigoriy Kuznezov\", },\r\n      { id: 2, name: \"Nikolay Latkin\", },\r\n      { id: 3, name: \"Vladimir Tashinskiy\", },\r\n      { id: 4, name: \"Maksim Sokolov\", },\r\n      { id: 5, name: \"Elmira Abramova\", },\r\n      { id: 6, name: \"Artem Schiva\", },\r\n   ],\r\n};\r\n\r\nconst asideReducer = (state = initialState, action) => {\r\n   return state;\r\n}\r\n\r\nexport default asideReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport asideReducer from \"./Aside-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport dialogsReducer from \"./Dialogs-reducer\";\r\nimport profileReducer from \"./Profile-reducer\"; \r\nimport usersReducer from \"./Users-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport axios from \"axios\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./App-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n   auth: authReducer,\r\n   profileReducer: profileReducer,\r\n   dialogsReducer: dialogsReducer,\r\n   asideReducer: asideReducer,\r\n   usersPage: usersReducer,\r\n   form: formReducer,\r\n   app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.axios = axios;\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Suspense } from \"react\";\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const WithSuspense = (Component) => {\r\n      \r\n      return (<Suspense fallback={<Preloader/>}>\r\n         <Component />\r\n      </Suspense>)\r\n};\r\n\r\n// export default WithSuspense","import React, { Suspense } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport { HashRouter, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport './App.css';\r\nimport Aside from './components/Aside/Aside';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { Profile } from './components/Profile/Profile';\r\nimport Users from './components/Users/Users';\r\nimport { initializeApp } from './Redux/App-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport ProfileContainer from './components/Profile/ProfileContainer'\r\nimport store from './Redux/redux-store';\r\nimport { WithSuspense } from './hoc/WithSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() { \r\n    this.props.initializeApp();\r\n  };\r\n  \r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderContainer></HeaderContainer>\r\n        <Aside></Aside>\r\n        <main className=\"content\">\r\n          <Route path=\"/profile/:userId?\" \r\n          render={ () => <ProfileContainer/> } />\r\n          \r\n          <Route path=\"/dialogs\" \r\n            render={ () => WithSuspense(DialogsContainer)} />\r\n          \r\n          <Route path=\"/news\" component={ Profile } />\r\n          <Route path=\"/music\" component={ Profile } />\r\n          <Route path=\"/settings\" component={ Profile } />\r\n\r\n          <Route path=\"/users\" \r\n            render={ () => WithSuspense(Users) } />\r\n          <Route path=\"/login\" \r\n            render={ () => <Login/>} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n  }\r\n}\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    initializeApp,\r\n  })\r\n)(App)\r\n\r\n\r\nconst MyApp = (props) => {\r\n  return <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer/>\r\n    </Provider>\r\n  </HashRouter>\r\n}\r\n\r\nexport default MyApp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport reactDom from 'react-dom'; \r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport MyApp from './App';\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './Redux/redux-store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nexport let rerenderEntireTree = (state) => {\r\n   reactDom.render(\r\n      <React.StrictMode>\r\n         <MyApp appState={ state } dispatch={ store.dispatch.bind(store) } />\r\n      {/* <BrowserRouter>\r\n         <Provider store={store}>\r\n            <App   />\r\n         </Provider>\r\n      </BrowserRouter> */}\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n   );\r\n}\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(() => {\r\n   rerenderEntireTree(store.getState())\r\n})\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInformation\":\"ProfileInfForm_profileInformation__NFLpr\",\"avatar_field\":\"ProfileInfForm_avatar_field__2pMhx\",\"avatar_photo\":\"ProfileInfForm_avatar_photo__3Unih\",\"avatar_settings\":\"ProfileInfForm_avatar_settings__1cH2f\",\"avatar_changePhoto\":\"ProfileInfForm_avatar_changePhoto__13geT\",\"profileInformation__text\":\"ProfileInfForm_profileInformation__text__2LEQc\",\"text_item\":\"ProfileInfForm_text_item__3rX4V\",\"text__name\":\"ProfileInfForm_text__name__1dzL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInf\":\"UserInf_userInf__ahEMP\",\"headInf\":\"UserInf_headInf__tQygY\",\"userFullName\":\"UserInf_userFullName__gfwWz\",\"userStatus\":\"UserInf_userStatus__1tOoN\",\"userLocation\":\"UserInf_userLocation__1Vmek\",\"userLocationCity\":\"UserInf_userLocationCity__1GHLr\",\"userLocationCountry\":\"UserInf_userLocationCountry__2Fue2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInformation\":\"ProfileInformation_profileInformation__1Vf5q\",\"avatar_field\":\"ProfileInformation_avatar_field__1h20q\",\"avatar_photo\":\"ProfileInformation_avatar_photo__KX_I1\",\"avatar_settings\":\"ProfileInformation_avatar_settings__3QrP3\",\"avatar_changePhoto\":\"ProfileInformation_avatar_changePhoto__chop6\",\"profileInformation__text\":\"ProfileInformation_profileInformation__text__20VHi\",\"text__name\":\"ProfileInformation_text__name__2E3J9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__YMBtf\",\"loginContainer\":\"Header_loginContainer__1T8h8\",\"login\":\"Header_login__qXReK\",\"logout\":\"Header_logout__29yXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAreaContainer\":\"FormsControls_textAreaContainer__2wm6S\",\"textArea\":\"FormsControls_textArea__3d2qV\",\"error\":\"FormsControls_error__1zw1d\",\"errorDescription\":\"FormsControls_errorDescription__198kT\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nlet mapStateToRedirect = (state) => ({\r\n      isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   \r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n         return <Component {...this.props} />\r\n      }\r\n   };\r\n////!Соединяем со store, чтобы не делать этого каждый раз в месте вызова HOC`a.\r\n   let connectedRedirectComponent = connect(mapStateToRedirect)(RedirectComponent);\r\n   \r\n   return connectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__5lk9k\",\"friendImage\":\"Friend_friendImage__22-4a\",\"friendName\":\"Friend_friendName__1ENaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2JaJ0\",\"friendsList\":\"Friends_friendsList__E7lKC\",\"friendsTitle\":\"Friends_friendsTitle__3xhBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Pages_items__QD1Bw\",\"item\":\"Pages_item__3FOZQ\",\"active\":\"Pages_active__3hpdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__25S7h\",\"usersTitle\":\"Users_usersTitle__2x_ro\",\"usersBody\":\"Users_usersBody__24JOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3StTK\",\"myPosts__title\":\"MyPosts_myPosts__title__3cw_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts__addNews\":\"NewPost_myPosts__addNews__1VDdW\",\"newPostAddNews\":\"NewPost_newPostAddNews__1yNFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPresent\":\"UserPresent_userPresent__1I9MT\",\"userAvatar\":\"UserPresent_userAvatar__2A63N\",\"userFollowed\":\"UserPresent_userFollowed__1qnrd\"};"],"sourceRoot":""}
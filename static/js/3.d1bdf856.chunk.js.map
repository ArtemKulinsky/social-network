{"version":3,"sources":["components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","to","id","className","s","dialog","dialogImage","src","image","dialogName","name","Message","message","belong","messageImage","messageText","NewMessageReduxForm","reduxForm","form","messageAddNew","onSubmit","handleSubmit","addForm","Field","textarea","component","addButton","Messages","addMessage","formData","newMessage","messages","messagesArea","map","Dialogs","isAuth","dialogs","title","dialogsBody","dialogsItems","path","render","updateNewMessageText","DialogsContainer","this","React","Component","compose","connect","state","dialogsReducer","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,WAAa,6B,oBCAzGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,YAAc,6BAA6B,aAAe,gC,oBCA9ID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,SAAW,0BAA0B,aAAe,8BAA8B,YAAc,+B,oBCAlLD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,+BAA+B,cAAgB,gCAAgC,QAAU,0BAA0B,SAAW,2BAA2B,UAAY,8B,mJCc7NC,EAXA,SAACC,GACb,OACG,eAAC,IAAD,CAASC,GAAK,YAAcD,EAAME,GAAIC,UAAWC,IAAEC,OAAnD,UACG,qBAAKF,UAAWC,IAAEE,YAAlB,SACG,qBAAKC,IAAKP,EAAMQ,UAEnB,qBAAKL,UAAWC,IAAEK,WAAlB,SAA+BT,EAAMU,W,sDCE/BC,EATC,SAACX,GACd,OACG,sBAAKG,UAAS,UAAKC,IAAEQ,QAAP,YAAkBR,IAAEJ,EAAMa,SAAxC,UACG,qBAAKV,UAAWC,IAAEU,eAClB,qBAAKX,UAAWC,IAAEW,YAAlB,SAAiCf,EAAMY,c,kBC8B1CI,EAAsBC,YAAU,CACnCC,KAAM,cADmBD,EAfL,SAACjB,GACrB,OACG,qBAAKG,UAAWC,IAAEe,cAAlB,SACG,uBAAMC,SAAUpB,EAAMqB,aAAclB,UAAWC,IAAEkB,QAAjD,UACG,cAACC,EAAA,EAAD,CACGb,KAAK,aACLP,UAAWC,IAAEoB,SACbC,UAAU,aAEb,wBAAQtB,UAAWC,IAAEsB,UAArB,0BAUGC,EApCE,SAAC3B,GACf,IAAI4B,EAAa,SAACC,GACf7B,EAAM4B,WAAWC,EAASC,aAG7B,OACG,sBAAK3B,UAAWC,IAAE2B,SAAlB,UACG,qBAAK5B,UAAWC,IAAE4B,aAAlB,SAEGhC,EAAM+B,SAASE,KAAI,SAACrB,GAAD,OAAa,cAAC,EAAD,CAASC,OAAQD,EAAQC,OAAyBD,QAASA,EAAQA,SAA7BA,EAAQV,SAGjF,cAACc,EAAD,CAAqBI,SAAUQ,EAAaA,WAAYA,QC8BlDM,EAxCC,SAAClC,GAEd,OAAKA,EAAMmC,OAGR,sBAAKhC,UAAWC,IAAEgC,QAAlB,UACG,qBAAKjC,UAAWC,IAAEiC,MAAlB,qBACA,sBAAKlC,UAAWC,IAAEkC,YAAlB,UACG,qBAAKnC,UAAWC,IAAEmC,aAAlB,SACCvC,EAAMoC,QAAQH,KAAI,SAAC5B,GAAD,OAChB,cAAC,EAAD,CAAQH,GAAIG,EAAOH,GAAoBQ,KAAML,EAAOK,MAAxBL,EAAOH,SAGtC,cAAC,IAAD,CACAsC,KAAK,aACLC,OAAQ,kBACL,cAAC,EAAD,CACGb,WAAY5B,EAAM4B,WAClBc,qBAAsB1C,EAAM0C,qBAC5BX,SAAU/B,EAAM+B,SAChBD,WAAY9B,EAAM8B,gBAIxB,cAAC,IAAD,CACAU,KAAK,aACLC,OAAQ,kBACL,cAAC,EAAD,CACGb,WAAY5B,EAAM4B,WAClBc,qBAAsB1C,EAAM0C,qBAC5BX,SAAU/B,EAAM+B,SAChBD,WAAY9B,EAAM8B,sBA7BP,cAAC,IAAD,CAAU7B,GAAG,Y,wBCFpC0C,E,4JACH,WACG,OAAQ,cAAC,EAAD,eAAaC,KAAK5C,Y,GAFD6C,IAAMC,WActBC,sBACZC,aARmB,SAACC,GACpB,MAAO,CACJb,QAASa,EAAMC,eAAed,QAC9BL,SAAUkB,EAAMC,eAAenB,YAKT,CAAEH,iBAC3BuB,IAFYJ,CAGbJ","file":"static/js/3.d1bdf856.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__HjkHX\",\"dialogImage\":\"Dialog_dialogImage__2TRW1\",\"dialogName\":\"Dialog_dialogName__1YHud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1sXjH\",\"title\":\"Dialogs_title__r3p39\",\"dialogsBody\":\"Dialogs_dialogsBody__pD5z3\",\"dialogsItems\":\"Dialogs_dialogsItems__11TLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__jvYxO\",\"user\":\"Message_user__3Gl6k\",\"opponent\":\"Message_opponent__2eAt_\",\"messageImage\":\"Message_messageImage__1VQDQ\",\"messageText\":\"Message_messageText__1WoTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1kBDc\",\"messagesArea\":\"Messages_messagesArea__3GvNF\",\"messageAddNew\":\"Messages_messageAddNew__3bvd4\",\"addForm\":\"Messages_addForm__3RxXY\",\"textarea\":\"Messages_textarea__22Ijv\",\"addButton\":\"Messages_addButton__ShbaD\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialog.module.css';\r\n\r\nconst Dialog = (props) => {\r\n   return (\r\n      <NavLink to ={\"/dialogs/\" + props.id} className={s.dialog}>\r\n         <div className={s.dialogImage}>\r\n            <img src={props.image} />\r\n         </div>\r\n         <div className={s.dialogName}>{props.name}</div>\r\n      </NavLink>\r\n   )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={`${s.message} ${s[props.belong]}`} >\r\n         <div className={s.messageImage}></div>\r\n         <div className={s.messageText}>{ props.message }</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Message from './Message/Message';\r\nimport s from './Messages.module.css';\r\n\r\nconst Messages = (props) => {\r\n   let addMessage = (formData) => {\r\n      props.addMessage(formData.newMessage);\r\n   }\r\n\r\n   return (\r\n      <div className={s.messages}>\r\n         <div className={s.messagesArea}>\r\n            {\r\n            props.messages.map((message) => <Message belong={message.belong} key={message.id} message={message.message} />)\r\n            }\r\n         </div>\r\n         <NewMessageReduxForm onSubmit={addMessage}  addMessage={addMessage} />\r\n      </div>\r\n   )\r\n}\r\n\r\nconst NewMessageForm = (props) => {\r\n   return (\r\n      <div className={s.messageAddNew}>\r\n         <form onSubmit={props.handleSubmit} className={s.addForm}>\r\n            <Field \r\n               name=\"newMessage\"\r\n               className={s.textarea}\r\n               component=\"textarea\"\r\n            ></Field>\r\n            <button className={s.addButton}>Send</button>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({\r\n   form: \"newMessage\"\r\n})(NewMessageForm);\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Dialog from './Dialog/Dialog';\r\nimport s from './Dialogs.module.css';\r\nimport Messages from './Messages/Messages';\r\n\r\nconst Dialogs = (props) => {\r\n   \r\n   if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.title}>Dialogs</div>\r\n         <div className={s.dialogsBody}>\r\n            <div className={s.dialogsItems}>\r\n            {props.dialogs.map((dialog) => (\r\n               <Dialog id={dialog.id} key={dialog.id} name={dialog.name} />\r\n            ))}\r\n            </div>\r\n            <Route\r\n            path=\"/dialogs/1\"\r\n            render={() => (\r\n               <Messages\r\n                  addMessage={props.addMessage}\r\n                  updateNewMessageText={props.updateNewMessageText}\r\n                  messages={props.messages}\r\n                  newMessage={props.newMessage}\r\n               />\r\n            )}\r\n            />\r\n            <Route\r\n            path=\"/dialogs/2\"\r\n            render={() => (\r\n               <Messages\r\n                  addMessage={props.addMessage}\r\n                  updateNewMessageText={props.updateNewMessageText}\r\n                  messages={props.messages}\r\n                  newMessage={props.newMessage}\r\n               />\r\n            )}\r\n            />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { addMessage } from '../../Redux/Dialogs-reducer'\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass DialogsContainer extends React.Component {\r\n   render() {\r\n      return (<Dialogs {...this.props} />);\r\n   }\r\n   \r\n}\r\n\r\nlet mapStatetoProps = (state) => {\r\n   return {\r\n      dialogs: state.dialogsReducer.dialogs,\r\n      messages: state.dialogsReducer.messages,\r\n   };\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStatetoProps, { addMessage }),\r\n   withAuthRedirect\r\n)(DialogsContainer);\r\n\r\n\r\n"],"sourceRoot":""}